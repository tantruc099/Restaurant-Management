/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DSNhanVien;

import MySQLDB.*;
import MySQLDB.ListNhanVien;
import MySQLDB.Shared;
import TrangChu.TrangChu;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import java.util.prefs.Preferences;
import javax.management.relation.Role;
import javax.swing.JOptionPane;
import pojo.LayNhanVien;
import pojo.NhanVien;
import pojo.NhanVienService;

/**
 *
 * @author User
 */
public class DSNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form NhanVien
     */
    DefaultTableModel dtm = new DefaultTableModel();

    public DSNhanVien() {

        String Tieude[] = {"Mã NV", "Họ Tên", "Giới tính", "Ngày vào làm", "Địa chỉ", "SDT", "Lương"};
        dtm.setColumnIdentifiers(Tieude);
        initComponents();
        load_DSNV();
        setLocationRelativeTo(null);

    }

    private void load_DSNV() {
        ListNhanVien NVDAO = new ListNhanVien();
        List<NhanVien> NVlist = NVDAO.layDSNV();

        dtm.setRowCount(0);
        for (NhanVien pb : NVlist) {
            String luongFormatted = formatLuong(pb.getLuong());
            Object[] row = new Object[]{
                pb.getMaNhanVien(),
                pb.getTenNhanVien(),
                pb.getGioiTinh(),
                pb.getNgayVaoLam(),
                pb.getDiaChi(),
                pb.getSoDienThoai(),
                luongFormatted
            };
            dtm.addRow(row);
        }
        tb.setModel(dtm);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnxoa = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btnthem = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txt_sex = new javax.swing.JTextField();
        txt_SDT = new javax.swing.JTextField();
        txt_maNV = new javax.swing.JTextField();
        txt_tenNV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_ngayVaoLam = new javax.swing.JTextField();
        txt_diaChi = new javax.swing.JTextField();
        txt_Luong = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnLamMoi = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("DANH SÁCH NHÂN VIÊN");

        btnxoa.setBackground(new java.awt.Color(51, 0, 153));
        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnsua.setBackground(new java.awt.Color(51, 0, 153));
        btnsua.setText("Sửa");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnthem.setBackground(new java.awt.Color(51, 0, 153));
        btnthem.setForeground(new java.awt.Color(255, 0, 153));
        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setText("Trang chủ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Tên NV :");

        jLabel2.setText("Mã NV :");

        jLabel6.setText("SDT :");

        jLabel5.setText("Giới tính :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_maNV, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addComponent(txt_tenNV)
                    .addComponent(txt_sex)
                    .addComponent(txt_SDT))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_maNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_tenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel3.setText("Ngày vào làm :");

        jLabel7.setText("Địa chỉ :");

        jLabel8.setText("Lương :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_diaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(txt_Luong))
                        .addGap(17, 17, 17))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txt_ngayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(17, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_ngayVaoLam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_diaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Luong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(27, 27, 27))
        );

        btnLamMoi.setText("Làm mới");
        btnLamMoi.setActionCommand("");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(100, 100, 100)
                                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnthem)
                        .addGap(55, 55, 55)
                        .addComponent(btnsua)
                        .addGap(52, 52, 52)
                        .addComponent(btnxoa)
                        .addGap(86, 86, 86)
                        .addComponent(jButton1)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnthem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnsua, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnxoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        if (isFieldsEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng dữ liệu từ bảng để xóa!");
        } else {
            // Hỏi người dùng xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa nhân viên?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Lấy mã sách từ ô nhập liệu để xóa
                String maNhanVien = txt_maNV.getText();
                deleteNVFromDatabase(maNhanVien);
            }
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private boolean isFieldsEmpty() {
        return txt_maNV.getText().isEmpty() || txt_tenNV.getText().isEmpty() || txt_sex.getText().isEmpty()
                || txt_ngayVaoLam.getText().isEmpty() || txt_diaChi.getText().isEmpty() || txt_SDT.getText().isEmpty() || txt_Luong.getText().isEmpty();
    }

    private String formatLuong(double Luong) {
        DecimalFormat decimalFormat = new DecimalFormat("####");
        return decimalFormat.format(Luong);
    }

    private NhanVienService nvService = new NhanVienService();

    private void deleteNVFromDatabase(String MaNhanVien) {
        boolean isDeleted = nvService.deleteNV(MaNhanVien);
        if (isDeleted) {
            JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công!");
            // Load lại dữ liệu sách sau khi xóa thành công
            load_DSNV();
            // Đặt trống các ô nhập liệu
            txt_maNV.setText("");
            txt_tenNV.setText("");
            txt_sex.setText("");
            txt_ngayVaoLam.setText("");
            txt_diaChi.setText("");
            txt_SDT.setText("");
            txt_Luong.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Xóa nhân vien không thành công do xung đột dữ liệu!");
        }
    }

    private String originalMaNV;

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
//        int selectedRow = tb.getSelectedRow();
//
//        if (selectedRow != -1) {
//            String MaNhanVien = tb.getValueAt(selectedRow, 0).toString();
//            originalMaNV = MaNhanVien;
//            // Sử dụng lớp DAO để lấy tên danh mục
//            ListNhanVien nvDAO = new ListNhanVien();
//            txt_maNV.setText(tb.getValueAt(selectedRow, 0).toString());
//            txt_tenNV.setText(tb.getValueAt(selectedRow, 1).toString());
//            txt_sex.setText(tb.getValueAt(selectedRow, 2).toString());
//            txt_ngayVaoLam.setText(tb.getValueAt(selectedRow, 3).toString());
//            txt_diaChi.setText(tb.getValueAt(selectedRow, 4).toString());
//            txt_SDT.setText(tb.getValueAt(selectedRow, 5).toString());
//            String luongString = tb.getValueAt(selectedRow, 6).toString();
//            double luong = Double.parseDouble(luongString);
//            txt_Luong.setText(formatLuong(luong));
//        } else {
//            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dữ liệu từ bảng để sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
//        }
        int selectedRow = tb.getSelectedRow();

        if (selectedRow != -1) {
            String MaNhanVien = tb.getValueAt(selectedRow, 0).toString();
            originalMaNV = MaNhanVien;
            // Sử dụng lớp DAO để lấy tên danh mục
            ListNhanVien nvDAO = new ListNhanVien();
            txt_maNV.setText(tb.getValueAt(selectedRow, 0).toString());
            txt_tenNV.setText(tb.getValueAt(selectedRow, 1).toString());
            txt_sex.setText(tb.getValueAt(selectedRow, 2).toString());
            txt_ngayVaoLam.setText(tb.getValueAt(selectedRow, 3).toString());
            txt_diaChi.setText(tb.getValueAt(selectedRow, 4).toString());
            txt_SDT.setText(tb.getValueAt(selectedRow, 5).toString());
            String luongString = tb.getValueAt(selectedRow, 6).toString();
            double luong = Double.parseDouble(luongString);
            txt_Luong.setText(formatLuong(luong));
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dữ liệu từ bảng để sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {
        // Retrieve updated information from the text fields
//        String MaNhanVien = txt_maNV.getText();
//        String TenNhanVien = txt_tenNV.getText();
//        String GioiTinh = txt_sex.getText();
//        String NgayVaoLam = txt_ngayVaoLam.getText();
//        String DiaChi = txt_diaChi.getText();
//        String SoDienThoai = txt_SDT.getText();
//        String Luong = txt_Luong.getText();
//
//        // Create an instance of ListNhanVien and call updateNV
//        ListNhanVien nvDAO = new ListNhanVien();
//        boolean updated = nvDAO.updateNV(MaNhanVien, TenNhanVien, GioiTinh, NgayVaoLam, DiaChi, SoDienThoai, Luong);
//
//        if (updated) {
//            JOptionPane.showMessageDialog(this, "Cập nhật nhân viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//            // Optionally, refresh the table to show updated data
//            refreshTable();
//        } else {
//            JOptionPane.showMessageDialog(this, "Cập nhật nhân viên thất bại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
//        }
        String MaNhanVien = txt_maNV.getText();
        String TenNhanVien = txt_tenNV.getText();
        String GioiTinh = txt_sex.getText();
        String NgayVaoLam = txt_ngayVaoLam.getText();
        String DiaChi = txt_diaChi.getText();
        String SoDienThoai = txt_SDT.getText();
        String Luong = txt_Luong.getText();

        // Create an instance of ListNhanVien and call updateNV
        ListNhanVien nvDAO = new ListNhanVien();
        boolean updated = nvDAO.updateNV(MaNhanVien, TenNhanVien, GioiTinh, NgayVaoLam, DiaChi, SoDienThoai, Luong);

        if (updated) {
            JOptionPane.showMessageDialog(this, "Cập nhật nhân viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            // Optionally, refresh the table to show updated data
            refreshTable();
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật nhân viên thất bại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnsuaActionPerformed

    private boolean validateData() {
        if (txt_maNV.getText().isEmpty() || txt_tenNV.getText().isEmpty() || txt_sex.getText().isEmpty()
                || txt_ngayVaoLam.getText().isEmpty() || txt_diaChi.getText().isEmpty() || txt_SDT.getText().isEmpty() || txt_Luong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin nhân viên.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        // Kiểm tra xem txtMaSach có thay đổi không
        if (!txt_maNV.getText().equals(originalMaNV)) {
            JOptionPane.showMessageDialog(this, "Không được thay đổi mã nhân viên.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return false;
    }

    private void refreshTable() {
        ListNhanVien nvDAO = new ListNhanVien();
        ArrayList<NhanVien> list = nvDAO.layDSNV();
        DefaultTableModel model = (DefaultTableModel) tb.getModel();
        model.setRowCount(0); // Clear the table

        for (NhanVien nv : list) {
            model.addRow(new Object[]{
                nv.getMaNhanVien(),
                nv.getTenNhanVien(),
                nv.getGioiTinh(),
                nv.getNgayVaoLam(),
                nv.getDiaChi(),
                nv.getSoDienThoai(),
                nv.getLuong()
            });
        }
    }
    private int selectedMaNV;

    private void updateNVData() {
        if (!validateData()) {
            return;
        }

        try {
            // Kết nối đến cơ sở dữ liệu

            String query = "SELECT MaNhanVien FROM NHAN_VIEN WHERE MaNhanVien = ?";
            ConnectDB provider = new ConnectDB();
            Connection conn = provider.open();
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                selectedMaNV = rs.getInt("MaNhanVien");
            }
            // Tạo đối tượng LaySach từ dữ liệu nhập vào
            LayNhanVien layNV = new LayNhanVien(
                    selectedMaNV,
                    txt_tenNV.getText(),
                    txt_sex.getText(),
                    txt_ngayVaoLam.getText(),
                    txt_diaChi.getText(),
                    txt_SDT.getText(),
                    Integer.parseInt(txt_Luong.getText())
            );

            // Thực hiện cập nhật dữ liệu sách
            query = "UPDATE NHAN_VIEN SET TenNhanVien = ?, GioiTinh = ?, NgayVaoLam = ?, DiaChi = ?, SoDienThoai = ?, Luong = ? WHERE MaNhanVien = ?";
            statement = conn.prepareStatement(query);
            statement.setString(1, layNV.getTenNhanVien());
            statement.setString(2, layNV.getGioiTinh());
            statement.setString(3, layNV.getNgayVaoLam());
            statement.setString(4, layNV.getDiaChi());
            statement.setString(5, layNV.getSoDienThoai());
            statement.setInt(6, layNV.getMaNhanVien());
            int result = statement.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Cập nhật dữ liệu thành công.", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                // Sau khi cập nhật thành công, load lại dữ liệu
                load_DSNV();
                // Xóa trống các ô dữ liệu đã sửa chữa
                txt_maNV.setText("");
                txt_tenNV.setText("");
                txt_sex.setText("");
                txt_ngayVaoLam.setText("");
                txt_diaChi.setText("");
                txt_SDT.setText("");
                txt_Luong.setText(""); // Chọn lại index -1 để không có mục nào được chọn
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật dữ liệu thất bại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }

            // Đóng kết nối
            conn.close();
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed

        String MaNhanVien = txt_maNV.getText();
        String TenNhanVien = txt_tenNV.getText();
        String GioiTinh = txt_sex.getText();
        String NgayVaoLam = txt_ngayVaoLam.getText();
        String DiaChi = txt_diaChi.getText();
        String SoDienThoai = txt_SDT.getText();
        String Luong = txt_Luong.getText();

        ListNhanVien nv = new ListNhanVien();
        boolean result = nv.insertNV(MaNhanVien, TenNhanVien, GioiTinh, NgayVaoLam, DiaChi, SoDienThoai, Luong);
        if (result) {
            JOptionPane.showMessageDialog(null, "Them Thanh Cong");
            load_DSNV();
            txt_maNV.setText("");
            txt_tenNV.setText("");
            txt_sex.setText("");
            txt_ngayVaoLam.setText("");
            txt_diaChi.setText("");
            txt_SDT.setText("");
            txt_Luong.setText("");
        }
    }//GEN-LAST:event_btnthemActionPerformed

    private void tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMouseClicked
        // TODO add your handling code here:
        int rowIndex = tb.getSelectedRow(); // Lấy chỉ số của hàng được chọn
        if (rowIndex != -1) {
            txt_maNV.setText(tb.getValueAt(rowIndex, 0).toString());
            txt_tenNV.setText(tb.getValueAt(rowIndex, 1).toString());
            txt_sex.setText(tb.getValueAt(rowIndex, 2).toString());
            txt_ngayVaoLam.setText(tb.getValueAt(rowIndex, 3).toString());
            txt_diaChi.setText(tb.getValueAt(rowIndex, 4).toString());
            txt_SDT.setText(tb.getValueAt(rowIndex, 5).toString());
            txt_Luong.setText(tb.getValueAt(rowIndex, 6).toString());
        }
    }//GEN-LAST:event_tbMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
        TrangChu trangchu = new TrangChu();
        trangchu.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        txt_maNV.setText("");
        txt_tenNV.setText("");
        txt_sex.setText("");
        txt_ngayVaoLam.setText("");
        txt_diaChi.setText("");
        txt_SDT.setText("");
        txt_Luong.setText("");
    }//GEN-LAST:event_btnLamMoiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DSNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btnxoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tb;
    private javax.swing.JTextField txt_Luong;
    private javax.swing.JTextField txt_SDT;
    private javax.swing.JTextField txt_diaChi;
    private javax.swing.JTextField txt_maNV;
    private javax.swing.JTextField txt_ngayVaoLam;
    private javax.swing.JTextField txt_sex;
    private javax.swing.JTextField txt_tenNV;
    // End of variables declaration//GEN-END:variables
}
