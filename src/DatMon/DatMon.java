/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DatMon;

import MySQLDB.*;
import TrangChu.TrangChu;
import com.sun.jdi.connect.spi.Connection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pojo.DetailBillVer2;
import pojo.datban;
import pojo.food;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JTable;
import pojo.BanPojo;

/**
 *
 * @author MyPC
 */
public class DatMon extends javax.swing.JFrame {

    private Connection conn;

    DefaultTableModel dtm = new DefaultTableModel();
    DefaultTableModel dtm1 = new DefaultTableModel();
    ArrayList<DetailBillVer2> menu = new ArrayList<>();

    public DatMon() {
        String Tieude[] = {"Mã Món", "Tên Món", "Giá"};
        dtm.setColumnIdentifiers(Tieude);
        initComponents();
        String[] columnNames = {"Mã Món", "Tên Món", "Giá", "Số Lượng"};
        // Thiết lập DefaultTableModel cho JTable
        dtm1.setColumnIdentifiers(columnNames);
        load_Menu(new MenuFood().layDmenumon());
        hienThiBangDuLieuMoi(); // Gọi hàm hiển thị bảng dữ liệu mới
        loadCb();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    // Thêm mã để tạo và hiển thị bảng dữ liệu mới
    private void hienThiBangDuLieuMoi() {
        // Tạo một bảng dữ liệu mới
        DefaultTableModel dtmMoi = new DefaultTableModel();

        // Định nghĩa tiêu đề cột cho bảng dữ liệu mới
        String[] tieuDeMoi = {"Tên món", "Số Lượng", "Giá"};
        dtmMoi.setColumnIdentifiers(tieuDeMoi);

    }

    public void loadCb() {
        DatMonDAO xu = new DatMonDAO();
        ArrayList<BanPojo> list = new ArrayList<>();
        list = xu.getBan();

        for (BanPojo ban : list) {
            cbBan.addItem(ban);
        }
    }

    private void load_Menu(ArrayList<food> danhSach) {
        dtm.setRowCount(0);
        for (food pb : danhSach) {
            Vector<Object> v = new Stack<>();
            v.add(pb.getMaThucPham());
            v.add(pb.getTenThucPham());
            v.add(pb.getGia());
            dtm.addRow(v);
        }
        jTable1.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTenMon = new javax.swing.JTextField();
        txtSoluong = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTien = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbBan = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb2 = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Thông tin món");

        jLabel2.setText("Tên món");

        jLabel3.setText("Sô lượng");

        txtSoluong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSoluongKeyPressed(evt);
            }
        });

        jLabel4.setText("Giá Tiền");

        jLabel7.setText("Bàn");

        cbBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBanActionPerformed(evt);
            }
        });

        jLabel6.setText("Danh Sách món chọn");

        jButton3.setText("Xóa Món");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Trang Chu");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tb2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tên món", "Số Lượng", "Giá"
            }
        ));
        jScrollPane3.setViewportView(tb2);

        btnThem.setText("Thêm món");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jButton2.setText("Đặt món");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(btnThem)
                .addGap(23, 23, 23)
                .addComponent(jButton3)
                .addGap(27, 27, 27)
                .addComponent(jButton4)
                .addGap(48, 48, 48))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(btnThem)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbBan, 0, 157, Short.MAX_VALUE)
                                    .addComponent(txtTien)
                                    .addComponent(txtTenMon)
                                    .addComponent(txtSoluong))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Món", "Tên Món", "Giá Tiền"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );

        jTabbedPane1.addTab("Món", jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 492, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:\
        dispose();
        TrangChu t= new TrangChu();
        t.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int rowIndex = tb2.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (rowIndex != -1) {
            // Lấy dữ liệu của dòng được chọn
            int maMon = (int) tb2.getValueAt(rowIndex, 0);

            // Tìm đối tượng trong danh sách hoặc ArrayList
            for (DetailBillVer2 detail : menu) {
                if (detail.getMamon() == maMon) {
                    // Xóa đối tượng khỏi ArrayList
                    menu.remove(detail);

                    // Cập nhật lại JTable
                    updateTable();
                    break; // Thoát vòng lặp sau khi xóa thành công
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    private void updateTable() {
        // Xóa tất cả các dòng trong DefaultTableModel
        DefaultTableModel model = (DefaultTableModel) tb2.getModel();
        model.setRowCount(0);

        // Thêm lại các dòng từ danh sách hoặc ArrayList mới
        for (DetailBillVer2 detail : menu) {
            Object[] rowData = {detail.getMamon(), detail.getTenmon(), detail.getGia(), detail.getSoluong()};
            model.addRow(rowData);
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        ArrayList<DetailBillVer2> dataList = getDataFromTable(dtm1);

        if (dataList != null && !dataList.isEmpty()) {
            int maHoaDon = 0;
            int maChiTietHD = 0;
            DatMonDAO xuly = new DatMonDAO();
            maHoaDon = xuly.GetIdHoaDon();

            float tongTien = 0;
            for (DetailBillVer2 detail : dataList) {
                int soluong = detail.getSoluong();
                float gia = detail.getGia();
                tongTien += soluong * gia;
            }

            BanPojo selectedBan = (BanPojo) cbBan.getSelectedItem();
            int maBan = 0;
            if (selectedBan != null) {
                maBan = selectedBan.getMaban();
            }

            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd-yyyy");
            String formattedDateTime = now.format(formatter);

            //maHoaDon = maHoaDon + 1;
            boolean checkBill = xuly.insertHoaDon( maBan,tongTien, formattedDateTime );

            if (checkBill) {
                for (DetailBillVer2 detail : dataList) {
                   int check = xuly.GetIdChiTietHoaDon();
                   if (check == 0) {
                        maChiTietHD = 1;
                    } else {
                        maChiTietHD = xuly.GetIdChiTietHoaDon();
                    }

                    int maThucPham = detail.getMamon();
                    String tenDonHang = detail.getTenmon();
                    float gia = detail.getGia();
                    int soLuongDat = detail.getSoluong();

                    // Lưu xuống chi tiết hóa đơn

                        boolean checkDetail = xuly.insertChiTietHoaDon(  maHoaDon, maThucPham,  tenDonHang,  gia,  soLuongDat);
                        if (!checkDetail) {
                            JOptionPane.showMessageDialog(this, "Lỗi khi thêm chi tiết hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                            return; // Thoát nếu có lỗi
                        }                
                }
                JOptionPane.showMessageDialog(this, "Thêm thành công!", "Thông báo!", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Lỗi khi thêm hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public static ArrayList<DetailBillVer2> getDataFromTable(DefaultTableModel model) {
        ArrayList<DetailBillVer2> dataList = new ArrayList<>();

        int rowCount = model.getRowCount();

        for (int i = 0; i < rowCount; i++) {
            int id = (int) model.getValueAt(i, 0);
            String name = (String) model.getValueAt(i, 1);
            float price = (float) model.getValueAt(i, 2);
            int count = (int) model.getValueAt(i, 3);

            DetailBillVer2 detail = new DetailBillVer2(id, name, price, count);
            dataList.add(detail);
        }

        return dataList;
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int rowIndex = jTable1.getSelectedRow();
        if (rowIndex != -1) {
            Object idMonan = jTable1.getValueAt(rowIndex, 0);
            Object Tenmonan = jTable1.getValueAt(rowIndex, 1);
            Object gia = jTable1.getValueAt(rowIndex, 2);
            if (idMonan != null) { // Kiểm tra xem ID có tồn tại không
                String id = idMonan.toString();
                String tenmonan = Tenmonan.toString();
                String giaMon = gia.toString();

                // Hiển thị thông tin lên các text field tương ứng
                txtTenMon.setText(tenmonan);
                txtTien.setText(giaMon);
            }
    }//GEN-LAST:event_jTable1MouseClicked
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        int rowIndex = jTable1.getSelectedRow();

        if (rowIndex != -1) {
            Object maMon = jTable1.getValueAt(rowIndex, 0);
            Object tenMon = jTable1.getValueAt(rowIndex, 1);
            Object giaTien = jTable1.getValueAt(rowIndex, 2);

            String MaMon = maMon.toString();
            int mamon = Integer.parseInt(MaMon);
            String Tenmon = tenMon.toString();
            float gia = Float.parseFloat(giaTien.toString()); // Chuyển đổi giá thành kiểu float
            String soluong = txtSoluong.getText();
            if (soluong.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền số lượng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int soluongNum = Integer.parseInt(soluong);

            boolean found = false;
            for (int i = 0; i < menu.size(); i++) {
                DetailBillVer2 Bill2 = menu.get(i);
                if (Bill2.getMamon() == mamon) {
                    // Mã món đã tồn tại, cập nhật số lượng và kết thúc vòng lặp
                    Bill2.setSoluong(Bill2.getSoluong() + soluongNum);
                    found = true;
                    break;
                }
            }
            if (!found) {
                // Mã món không tồn tại, thêm món mới vào danh sách
                DetailBillVer2 Ver2 = new DetailBillVer2(mamon, Tenmon, gia, soluongNum);
                menu.add(Ver2);
                Object[] rowData = {mamon, Tenmon, gia, soluongNum};
                dtm1.addRow(rowData);
                tb2.setModel(dtm1);
            } else {
                load_Table();

            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtSoluongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoluongKeyPressed
        // TODO add your handling code here:
        String value = txtSoluong.getText();
        int l = value.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            //setEditable(true);
        } else if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getKeyCode() == KeyEvent.VK_DELETE) {
            // setEditable(true);
        } else {
            //setEditable(false);
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSoluongKeyPressed

    private void cbBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBanActionPerformed

    public void load_Table() {
        dtm1.setRowCount(0); // Xóa hết các dòng trong bảng

        // Load lại dữ liệu vào bảng jTable1 từ danh sách menu
        for (DetailBillVer2 bill : menu) {
            Object[] rowData = {bill.getMamon(), bill.getTenmon(), bill.getGia(), bill.getSoluong()};
            dtm1.addRow(rowData);
        }
        tb2.setModel(dtm1);
    }

    /**
     * @param args the command line arguments
     */
    public ArrayList<DetailBillVer2> laydbmenu(DetailBillVer2 Bill2) {
        menu.add(Bill2);
        return menu;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatMon.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatMon.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatMon.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatMon.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatMon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<BanPojo> cbBan;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tb2;
    private javax.swing.JTextField txtSoluong;
    private javax.swing.JTextField txtTenMon;
    private javax.swing.JTextField txtTien;
    // End of variables declaration//GEN-END:variables
}
